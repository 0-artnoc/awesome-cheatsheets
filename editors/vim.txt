##############################################################################
# VIM CHEATSHEET (http://www.vim.org)
# Version: 1
# Last Modified: 2018/02/18 00:06
# https://github.com/skywind3000/awesome-cheatsheets/editors/vim.txt
##############################################################################


##############################################################################
# 光标移动
##############################################################################

h                   光标左移，同 Left 键
j                   光标下移，同 Down 键
k                   光标上移，同 Up 键
l                   光标右移，同 Right 键
CTRL-f              下一页
CTRL-b              上一页
CTRL-u              上移半屏
CTRL-d              下移半屏
0                   跳到行首（是数字零，不是字母O），效用等同于 Home 键
^                   跳到从行首开始第一个非空白字符
$                   跳到行尾，效用等同于 End 键
gg                  跳到第一行，效用等同于 CTRL+Home
G                   跳到最后一行，效用等同于 CTRL+End
nG                  跳到第n行，比如 10G 是移动到第十行
:n                  跳到第n行，比如 :10<回车> 是移动到第十行
w                   跳到下一个单词开头 (word: 标点或空格分隔的单词)
W                   跳到下一个单词开头 (WORD: 空格分隔的单词)
e                   跳到下一个单词尾部 (word: 标点或空格分隔的单词)
E                   跳到下一个单词尾部 (WORD: 空格分隔的单词)
b                   上一个单词头 (word: 标点或空格分隔的单词)
B                   上一个单词头 (WORD: 空格分隔的单词)
ge                  上一个单词尾
)                   向前移动一个句子（句号分隔）
(                   向后移动一个句子（句号分隔）
}                   向前移动一个段落（空行分隔）
{                   向后移动一个段落（空行分隔）
<enter>             移动到下一行首个非空字符
+                   移动到下一行首个非空字符（同回车键）
-                   移动到上一行首个非空字符
H                   移动到屏幕上部
M                   移动到屏幕中部
L                   移动到屏幕下部


##############################################################################
# 插入模式
##############################################################################

i                   在光标处进入插入模式
I                   在行首进入插入模式
a                   在光标后进入插入模式
A                   在行尾进入插入模式
o                   在下一行插入新行并进入插入模式
O                   在上一行插入新行并进入插入模式
<ESC>               退出插入模式
CTRL-[              退出插入模式（同 ESC 等价，但更顺手）


##############################################################################
# 文本编辑
##############################################################################

r                   替换当前字符
R                   进入替换模式，直至 ESC 离开
s                   删除光标处字符，并进入插入模式（前可接数量表示删几个字符）
S                   删除光标所在行，并进入插入模式（前可接数量表示删多少行）
cc                  改写当前行（删除当前行并进入插入模式），同 S
cw                  改写光标开始处的当前单词
ciw                 改写光标所处的单词
caw                 改写光标所处的单词，并且包括前后空格（如果有的话）
c0                  改写到行首
c^                  改写到行首（第一个非零字符）
c$                  改写到行末
x                   删除当前字符，前面可以接数字
X                   向前删除字符
dd                  删除当前行
d0                  删除到行首
d^                  删除到行首（第一个非零字符）
d$                  删除到行末
D                   删除到行末（同 d$）
dw                  删除当前单词
diw                 删除光标所处的单词
daw                 删除光标所处的单词，并包含前后空格（如果有的话）
u                   撤销
CTRL-R              重复
J                   链接多行为一行
.                   重复上一次操作
~                   替换大小写
g~iw                替换当前单词的大小写
gUiw                将单词转成大写
guiw                将当前单词转成小写
<<                  减少缩进
>>                  增加缩进
==                  自动缩进


##############################################################################
# 复制粘贴
##############################################################################

p                   粘贴到光标后
P                   粘贴到光标前
v                   开始标记
y                   复制标记内容
y$                  复制当前位置到本行结束的内容
V                   开始按行标记
CTRL-v              开始列标记
yy                  复制当前行
3yy                 复制光标下三行内容
:set paste          设置粘贴模式（避免粘贴时自动缩进影响格式）
:set nopaste        光比删除模式
"?yy                复制当前行到寄存器 ? ，问号代表 0-9 的寄存器名称
"?p                 将寄存器 ? 的内容粘贴到光标后
"?P                 将寄存器 ? 的内容粘贴到光标前


##############################################################################
# 查找替换
##############################################################################

/pattern            从光标处向文件尾搜索 pattern
?pattern            从光标处向文件头搜索 pattern
n                   向同一方向执行上一次搜索
N                   向相反方向执行上一次搜索
:s/p1/p2/g          将当前行中全替换p1为p2
:%s/p1/p2/g         将当前文件中全替换p1为p2
:%s/p1/p2/gc        将当前文件中全替换p1为p2，并且每处询问你是否替换
:10,20s/p1/p2/g     将第10到20行中所有p1替换为p2
:%s/1\\2\/3/123/g   将“1\2/3” 替换为 “123”（特殊字符使用反斜杠标注）


##############################################################################
# 位置跳转
##############################################################################

gd                  跳转到定义
[[                  跳转到上一个顶层函数（比如C语言以大括号分隔）
]]                  跳转到下一个顶层函数（比如C语言以大括号分隔）
[m                  跳转到上一个成员函数
]m                  跳转到下一个成员函数
[{                  跳转到上一处未匹配的 {
]}                  跳转到下一处未匹配的 }
[(                  跳转到上一处未匹配的 (
])                  跳转到下一处未匹配的 )
[s                  跳转到上一处拼写错误
]s                  跳转到下一处拼写错误
[c                  上一个不同处（diff时）
]c                  下一个不同处（diff时）
[/                  跳转到 C注释开头
]/                  跳转到 C注释结尾


##############################################################################
# 文件操作
##############################################################################

:w                  保存文件
:w <filename>       按名称保存文件
:e <filename>       打开文件并编辑
:saveas <filename>  另存为文件
:r <filename>       读取文件并将内容插入到光标后
:r !dir             将 dir 命令的输出捕获并插入到光标后



# vim: set ts=4 sw=4 tw=0 noet noautoindent :


